name: "build"
on:
  push:
    branches:
    - "master" 
  pull_request:
    branches:
    - "!dependabot/*"
    - "*"
jobs:
  lint: 
    name: "Lint"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/setup-go@v2"
      with:
        go-version: ^1.16
    - name: "Install linting tools"
      run: |
        # This is done before checking out, as to not modify go.mod
        go install mvdan.cc/gofumpt/gofumports@latest
        go install github.com/mgechev/revive@latest
        go install golang.org/x/tools/cmd/stringer@latest
    - uses: "actions/checkout@v2"
    - name: "Go Mod Tidy"
      run: "go mod tidy && bash -c '[ $(git status --porcelain | tee /dev/fd/2 | wc -c) -eq 0 ]'"
    - name: "Formatting (gofumpt)"
      run: |
        GOFUMPT_OUTPUT="$(find . -iname '*.go' -type f | grep -v pb.go | grep -v 'pb.*.go' | xargs gofumports -d)"
        if [ -n "$GOFUMPT_OUTPUT" ]; then
          echo "All the following files are not correctly formatted"
          echo "${GOFUMPT_OUTPUT}"
          exit 1
        fi
    - name: "Linting (revive)"
      run: "bash -c '[ $(find . -iname '*.go' -type f | grep -v 'pb.*.go' | xargs revive | tee /dev/fd/2 | wc -c) -eq 0 ]'"

  test:
    name: "Test"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - uses: "actions/setup-go@v2"
      with:
        go-version: "^1.16"
    - uses: "authzed/action-testserver@v3"
    - name: "go test"
      run: "go test -tags integration ./..."

  protobuf:
    name: "Generate Protobufs"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/setup-go@v2"
      with:
        go-version: "^1.16"
    - name: "Install Go Protobuf plugins"
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
        go install github.com/envoyproxy/protoc-gen-validate@v0.6.1
    - uses: "actions/checkout@v2"
    - uses: "bufbuild/buf-setup-action@v0.5.0"
      with:
        version: "0.56.0"
    - name: "Generate & Diff Protos"
      run: "./buf.gen.yaml && git diff && bash -c '[ $(git status --porcelain | tee /dev/fd/2 | wc -c) -eq 0 ]'"
